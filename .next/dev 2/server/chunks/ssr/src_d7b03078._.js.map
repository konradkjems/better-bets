{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/konradkjems/Desktop/Cursor-Projects/better-bets/src/components/auth/AuthButton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useUser, SignInButton, UserButton } from '@clerk/nextjs';\n\nexport function AuthButton() {\n  const { isSignedIn, user } = useUser();\n\n  if (isSignedIn) {\n    return (\n      <div className=\"flex items-center gap-4\">\n        <span className=\"text-sm text-gray-600\">\n          Welcome, {user?.firstName || user?.emailAddresses[0]?.emailAddress}\n        </span>\n        <UserButton \n          appearance={{\n            elements: {\n              avatarBox: \"w-8 h-8\"\n            }\n          }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <SignInButton mode=\"modal\">\n      <button className=\"btn-primary\">\n        Sign In\n      </button>\n    </SignInButton>\n  );\n}\n\nexport function ProtectedContent({ children }: { children: React.ReactNode }) {\n  const { isSignedIn, isLoaded } = useUser();\n\n  if (!isLoaded) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-4 border-blue-500 border-t-transparent\"></div>\n      </div>\n    );\n  }\n\n  if (!isSignedIn) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-sm p-6 text-center\">\n        <div className=\"mb-4\">\n          <svg className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"/>\n          </svg>\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Sign in to save calculations</h3>\n          <p className=\"text-gray-600 mb-4\">Create an account to save your arbitrage calculations and access them later.</p>\n        </div>\n        <SignInButton mode=\"modal\">\n          <button className=\"btn-primary\">\n            Sign In with Google\n          </button>\n        </SignInButton>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AAAA;AAAA;AAHA;;;AAKO,SAAS;IACd,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,IAAA,uKAAO;IAEpC,IAAI,YAAY;QACd,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,WAAU;;wBAAwB;wBAC5B,MAAM,aAAa,MAAM,cAAc,CAAC,EAAE,EAAE;;;;;;;8BAExD,8OAAC,qLAAU;oBACT,YAAY;wBACV,UAAU;4BACR,WAAW;wBACb;oBACF;;;;;;;;;;;;IAIR;IAEA,qBACE,8OAAC,2LAAY;QAAC,MAAK;kBACjB,cAAA,8OAAC;YAAO,WAAU;sBAAc;;;;;;;;;;;AAKtC;AAEO,SAAS,iBAAiB,EAAE,QAAQ,EAAiC;IAC1E,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,IAAA,uKAAO;IAExC,IAAI,CAAC,UAAU;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,CAAC,YAAY;QACf,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;4BAAuC,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCAC9F,cAAA,8OAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAY;gCAAI,GAAE;;;;;;;;;;;sCAEvE,8OAAC;4BAAG,WAAU;sCAA2C;;;;;;sCACzD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAEpC,8OAAC,2LAAY;oBAAC,MAAK;8BACjB,cAAA,8OAAC;wBAAO,WAAU;kCAAc;;;;;;;;;;;;;;;;;IAMxC;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/konradkjems/Desktop/Cursor-Projects/better-bets/src/lib/calculator.ts"],"sourcesContent":["// Calculator module for React integration\n\nexport interface BookmakerInfo {\n    name: string;\n    fixedStake: number;\n    hasBonus: boolean;\n    actualCost: number;\n    minOdds: number;\n    preferLoss?: boolean;\n    avoidWin?: boolean;\n    isActive: boolean;\n    bonusType?: 'freebet' | 'matchingBonus' | 'none';\n    bonusAmount?: number;\n    bonusMinOdds?: number;\n    qualifyingBetAmount?: number;\n    isBonusLocked?: boolean;\n    usedInBet1?: boolean;\n    bonusOnlyIfLost?: boolean;\n    bet1Lost?: boolean;\n    bet1Balance?: number;\n    bet1Profit?: number;\n    odds?: {\n        team1: number;\n        draw: number;\n        team2: number;\n    };\n}\n\nexport interface TeamNames {\n    team1: string;\n    team2: string;\n}\n\nexport interface BookmakerOdds {\n    name: string;\n    team1: number;\n    draw: number;\n    team2: number;\n    fixedStake: number;\n    actualCost: number;\n    minOdds: number;\n    preferLoss?: boolean;\n    avoidWin?: boolean;\n    isActive: boolean;\n    betType?: 'team1' | 'draw' | 'team2';\n    originalOdds?: {\n        team1: number;\n        draw: number;\n        team2: number;\n    };\n    favoritType?: 'team1' | 'team2';\n    underdogType?: 'team1' | 'team2';\n    returns?: {\n        team1: number;\n        draw: number;\n        team2: number;\n    };\n}\n\nexport interface Customer {\n    id: string;\n    name: string;\n    bookmakers: BookmakerInfo[];\n    teamNames?: TeamNames;\n    betType: 'qualifying' | 'bonus';\n}\n\nexport interface ArbitrageResult {\n    allBookmakers: {\n        name: string;\n        team1Odds: number;\n        drawOdds: number;\n        team2Odds: number;\n        fixedStake: number;\n        actualCost: number;\n        minOdds: number;\n        betType: 'team1' | 'draw' | 'team2';\n        potentialReturn: number;\n    }[];\n    totalStake: number;\n    totalActualCost: number;\n    potentialReturns: {\n        team1: number;\n        draw: number;\n        team2: number;\n    };\n    profit: number;\n    profitPercentage: number;\n    isArbitrage: boolean;\n}\n\nconst BOOKMAKERS: BookmakerInfo[] = [\n    { name: 'Unibet', fixedStake: 2000, hasBonus: true, actualCost: 1000, minOdds: 1.4, isActive: true, bonusType: 'matchingBonus', bonusAmount: 1000, bonusMinOdds: 1.4, qualifyingBetAmount: 1000, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'Bet365', fixedStake: 1000, hasBonus: false, actualCost: 1000, minOdds: 1.2, isActive: true, bonusType: 'freebet', bonusAmount: 1000, bonusMinOdds: 1.2, qualifyingBetAmount: 1000, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'LeoVegas', fixedStake: 1000, hasBonus: false, actualCost: 1000, minOdds: 1.8, isActive: true, bonusType: 'freebet', bonusAmount: 1000, bonusMinOdds: 1.8, qualifyingBetAmount: 1000, usedInBet1: true, bonusOnlyIfLost: true },\n    { name: 'ComeOn', fixedStake: 2000, hasBonus: true, actualCost: 1000, minOdds: 1.8, preferLoss: true, isActive: true, bonusType: 'matchingBonus', bonusAmount: 1000, bonusMinOdds: 1.8, qualifyingBetAmount: 1000, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'Mr Green', fixedStake: 300, hasBonus: false, actualCost: 300, minOdds: 1.8, isActive: true, bonusType: 'freebet', bonusAmount: 300, bonusMinOdds: 1.8, qualifyingBetAmount: 300, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'NordicBet', fixedStake: 500, hasBonus: false, actualCost: 500, minOdds: 1.8, isActive: true, bonusType: 'freebet', bonusAmount: 500, bonusMinOdds: 1.8, qualifyingBetAmount: 500, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'Bwin', fixedStake: 1000, hasBonus: false, actualCost: 1000, minOdds: 1.8, isActive: true, bonusType: 'freebet', bonusAmount: 1000, bonusMinOdds: 1.8, qualifyingBetAmount: 1000, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: '888sport', fixedStake: 500, hasBonus: false, actualCost: 500, minOdds: 2.0, isActive: true, bonusType: 'freebet', bonusAmount: 500, bonusMinOdds: 2.0, qualifyingBetAmount: 500, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'Bet25', fixedStake: 250, hasBonus: false, actualCost: 250, minOdds: 1.95, isActive: true, bonusType: 'matchingBonus', bonusAmount: 250, bonusMinOdds: 1.95, qualifyingBetAmount: 250, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'Expekt', fixedStake: 1000, hasBonus: false, actualCost: 1000, minOdds: 1.5, isActive: true, bonusType: 'freebet', bonusAmount: 1000, bonusMinOdds: 1.5, qualifyingBetAmount: 1000, usedInBet1: true, bonusOnlyIfLost: true },\n    { name: 'Cashpoint', fixedStake: 500, hasBonus: false, actualCost: 500, minOdds: 1.8, isActive: true, bonusType: 'freebet', bonusAmount: 500, bonusMinOdds: 1.8, qualifyingBetAmount: 500, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'Jackpotbet', fixedStake: 500, hasBonus: false, actualCost: 500, minOdds: 1.5, isActive: true, bonusType: 'matchingBonus', bonusAmount: 500, bonusMinOdds: 1.5, qualifyingBetAmount: 500, usedInBet1: true, bonusOnlyIfLost: false },\n    { name: 'Getlucky', fixedStake: 100, hasBonus: false, actualCost: 100, minOdds: 1.8, isActive: true, bonusType: 'freebet', bonusAmount: 100, bonusMinOdds: 1.8, qualifyingBetAmount: 100, usedInBet1: true, bonusOnlyIfLost: false }\n];\n\n// Global state\nlet customers: Customer[] = [];\nlet currentCustomerId: string | null = null;\nlet currentBetType: 'qualifying' | 'bonus' = 'qualifying';\nlet lastCalculatedResult: ArbitrageResult | null = null;\n\nexport function getCurrentCustomer(): Customer {\n    return customers.find(c => c.id === currentCustomerId) || customers[0];\n}\n\nexport function generateBookmakerId(bookmakerName: string): string {\n    return bookmakerName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n}\n\n// Core arbitrage calculation function\nexport function calculateArbitrage(oddsData: BookmakerOdds[], customer: Customer): ArbitrageResult {\n    const isQualifyingBet = customer.betType === 'qualifying';\n\n    // Beregn potentielle returns for hver bookmaker for hvert udfald\n    const bookmakerReturns = oddsData.map(bm => {\n        const bookmakerInfo = customer.bookmakers.find(b => b.name === bm.name);\n\n        // Opdater calculateReturn til at tjekke for freebet uafhÃ¦ngigt af betType\n        const calculateReturn = (odds: number, stake: number, isFreebet: boolean) => {\n            if (isFreebet) {\n                return (odds - 1) * stake; // Kun gevinst, ikke indsats tilbage for freebets\n            }\n            return odds * stake; // Normal beregning\n        };\n\n        // Find det laveste odds (favorit) for denne bookmaker\n        const team1Odds = bm.team1 || Infinity;\n        const team2Odds = bm.team2 || Infinity;\n        const favoritType = team1Odds <= team2Odds ? 'team1' as const : 'team2' as const;\n        const underdogType = team1Odds <= team2Odds ? 'team2' as const : 'team1' as const;\n\n        // Kald calculateReturn med isFreebet parameter\n        return {\n            ...bm,\n            favoritType,\n            underdogType,\n            returns: {\n                team1: calculateReturn(bm.team1, bm.fixedStake, bookmakerInfo?.bonusType === 'freebet'),\n                draw: calculateReturn(bm.draw, bm.fixedStake, bookmakerInfo?.bonusType === 'freebet'),\n                team2: calculateReturn(bm.team2, bm.fixedStake, bookmakerInfo?.bonusType === 'freebet')\n            }\n        };\n    });\n\n    // Find target return (gennemsnit af alle mulige returns)\n    const totalPossibleReturn = bookmakerReturns.reduce((sum, bm) => \n        sum + (bm.returns?.team1 || 0) + (bm.returns?.draw || 0) + (bm.returns?.team2 || 0), 0);\n    const targetReturnPerOutcome = totalPossibleReturn / 3;\n\n    let bestDistribution = {\n        team1: [] as BookmakerOdds[],\n        draw: [] as BookmakerOdds[],\n        team2: [] as BookmakerOdds[],\n        deviation: Infinity\n    };\n\n    // Funktion til at evaluere en distribution\n    const evaluateDistribution = (team1: BookmakerOdds[], draw: BookmakerOdds[], team2: BookmakerOdds[]): number => {\n        const calculateReturnForBet = (bm: BookmakerOdds, odds: number) => {\n            const bookmakerInfo = customer.bookmakers.find(b => b.name === bm.name);\n            if (!isQualifyingBet && bookmakerInfo?.bonusType === 'freebet') {\n                return (odds - 1) * bm.fixedStake;\n            }\n            return odds * bm.fixedStake;\n        };\n\n        const team1Return = team1.reduce((sum, bm) => sum + calculateReturnForBet(bm, bm.team1), 0);\n        const drawReturn = draw.reduce((sum, bm) => sum + calculateReturnForBet(bm, bm.draw), 0);\n        const team2Return = team2.reduce((sum, bm) => sum + calculateReturnForBet(bm, bm.team2), 0);\n\n        // Beregn afvigelse fra target\n        const maxReturn = Math.max(team1Return, drawReturn, team2Return);\n        const minReturn = Math.min(team1Return, drawReturn, team2Return);\n        const avgReturn = (team1Return + drawReturn + team2Return) / 3;\n\n        // Straf stÃ¸rre afvigelser hÃ¥rdere ved at kvadrere forskellen\n        const baseDeviation = Math.pow(maxReturn - minReturn, 2) + \n                            Math.pow(Math.abs(team1Return - avgReturn), 2) +\n                            Math.pow(Math.abs(drawReturn - avgReturn), 2) +\n                            Math.pow(Math.abs(team2Return - avgReturn), 2);\n\n        let penalty = 0;\n\n        // Specialregler for kvalificerende bets\n        if (isQualifyingBet) {\n            // TÃ¦l \"kun hvis tab\"-freebets pÃ¥ hvert udfald\n            const bonusOnlyIfLostFreebets = [...team1, ...draw, ...team2].filter(bm => {\n                const bookmakerInfo = customer.bookmakers.find(b => b.name === bm.name);\n                return bookmakerInfo?.bonusOnlyIfLost && bookmakerInfo.bonusType === 'freebet';\n            });\n            \n            const team1BonusOnlyIfLost = bonusOnlyIfLostFreebets.filter(bm => bm.betType === 'team1').length;\n            const drawBonusOnlyIfLost = bonusOnlyIfLostFreebets.filter(bm => bm.betType === 'draw').length;\n            const team2BonusOnlyIfLost = bonusOnlyIfLostFreebets.filter(bm => bm.betType === 'team2').length;\n            \n            // Straf hvis \"kun hvis tab\"-freebets ikke er balanceret fordelt\n            const totalBonusOnlyIfLost = team1BonusOnlyIfLost + drawBonusOnlyIfLost + team2BonusOnlyIfLost;\n            if (totalBonusOnlyIfLost > 0) {\n                const idealPerOutcome = totalBonusOnlyIfLost / 3;\n                const deviation = Math.abs(team1BonusOnlyIfLost - idealPerOutcome) + \n                                Math.abs(drawBonusOnlyIfLost - idealPerOutcome) + \n                                Math.abs(team2BonusOnlyIfLost - idealPerOutcome);\n                penalty += deviation * 10000; // Stor straf for ubalanceret fordeling\n            }\n\n            [...team1, ...draw, ...team2].forEach(bm => {\n                const bookmakerInfo = customer.bookmakers.find(b => b.name === bm.name);\n                \n                // Straf hvis vi bruger en bookmaker uden bonus i kvalificerende fase\n                if (!bookmakerInfo?.bonusType || bookmakerInfo.bonusType === 'none') {\n                    penalty += 5000;\n                }\n\n                // Tjek om odds er over minimum for bonus\n                if (bookmakerInfo?.bonusMinOdds) {\n                    const placedOdds = bm.betType === 'team1' ? bm.team1 :\n                                     bm.betType === 'draw' ? bm.draw :\n                                     bm.team2;\n                    if (placedOdds < bookmakerInfo.bonusMinOdds) {\n                        penalty += 10000; // Stor straf hvis odds er under minimum for bonus\n                    }\n                }\n\n                // Specialregel for \"kun hvis tabt\" bonusser - vi vil gerne tabe pÃ¥ disse bookmakere\n                if (bookmakerInfo?.bonusOnlyIfLost && bookmakerInfo.bonusType === 'freebet') {\n                    // Find den hÃ¸jeste odds (underdog) for denne bookmaker\n                    const team1Odds = bm.team1 || 0;\n                    const team2Odds = bm.team2 || 0;\n                    const underdogType = team1Odds >= team2Odds ? 'team1' : 'team2';\n                    \n                    // Hvis vi spiller pÃ¥ underdog'en (laveste sandsynlighed for gevinst), giv bonus\n                    if (bm.betType === underdogType) {\n                        penalty -= 2000; // Bonus for at spille pÃ¥ underdog'en\n                    } else {\n                        penalty += 5000; // Straf for at spille pÃ¥ favoritten\n                    }\n                }\n            });\n        }\n\n        // Specialregler for bonus bets (freebets)\n        if (!isQualifyingBet) {\n            [...team1, ...draw, ...team2].forEach(bm => {\n                const bookmakerInfo = customer.bookmakers.find(b => b.name === bm.name);\n                \n                // For freebets vil vi gerne have hÃ¸jere odds for at maksimere gevinst\n                // men stadig holde det balanceret\n                if (bookmakerInfo?.bonusType === 'freebet') {\n                    const placedOdds = bm.betType === 'team1' ? bm.team1 :\n                                     bm.betType === 'draw' ? bm.draw :\n                                     bm.team2;\n                    // Mindre aggressiv bonus for hÃ¸jere odds\n                    penalty -= (placedOdds - bookmakerInfo.minOdds) * 100;\n                }\n\n                // Straf for meget ubalancerede returns i Bet 2\n                const returnSpread = maxReturn - minReturn;\n                if (returnSpread > avgReturn * 0.1) { // Hvis spredningen er mere end 10% af gennemsnittet\n                    penalty += Math.pow(returnSpread, 2);\n                }\n            });\n        }\n\n        // Generelle regler for alle typer bets\n        const comeOnBet = [...team1, ...draw, ...team2].find(bm => bm.name === 'ComeOn');\n        if (comeOnBet) {\n            const comeOnData = bookmakerReturns.find(bm => bm.name === 'ComeOn');\n            if (comeOnData) {\n                const isOnFavorit = comeOnBet.betType === comeOnData.favoritType;\n                const isOnDraw = comeOnBet.betType === 'draw';\n                if (isOnFavorit || isOnDraw) {\n                    penalty += 50000;\n                }\n            }\n        }\n\n        return baseDeviation + penalty;\n    };\n\n    // PrÃ¸v forskellige kombinationer\n    const tryDistribution = (remaining: typeof bookmakerReturns, team1: BookmakerOdds[], draw: BookmakerOdds[], team2: BookmakerOdds[]) => {\n        if (remaining.length === 0) {\n            const deviation = evaluateDistribution(team1, draw, team2);\n            if (deviation < bestDistribution.deviation) {\n                bestDistribution = { team1, draw, team2, deviation };\n            }\n            return;\n        }\n\n        const [current, ...rest] = remaining;\n        \n        // Beregn nuvÃ¦rende returns for hver gruppe\n        const currentTeam1 = team1.reduce((sum, bm) => sum + bm.team1 * bm.fixedStake, 0);\n        const currentDraw = draw.reduce((sum, bm) => sum + bm.draw * bm.fixedStake, 0);\n        const currentTeam2 = team2.reduce((sum, bm) => sum + bm.team2 * bm.fixedStake, 0);\n\n        // SpecialhÃ¥ndtering for ComeOn - skal altid pÃ¥ det modsatte hold af favoritten\n        if (current.name === 'ComeOn') {\n            const team1Odds = current.team1 || Infinity;\n            const team2Odds = current.team2 || Infinity;\n            \n            // Find ud af hvilket hold der er favoritten (laveste odds)\n            const favoritType = team1Odds <= team2Odds ? 'team1' : 'team2';\n            \n            // Placer ComeOn pÃ¥ det modsatte hold af favoritten\n            if (favoritType === 'team1' && current.team2 > 0) {\n                tryDistribution(rest, team1, draw, [...team2, current]);\n            } else if (favoritType === 'team2' && current.team1 > 0) {\n                tryDistribution(rest, [...team1, current], draw, team2);\n            }\n            return;\n        }\n\n        // Prioriter placering baseret pÃ¥ bookmaker prÃ¦ferencer\n        let priorities: Array<{ type: 'team1' | 'draw' | 'team2'; need: number; odds: number; current: BookmakerOdds[] }> = [];\n        \n        // SpecialhÃ¥ndtering for \"kun hvis tab\"-freebets i kvalificerende bets\n        if (isQualifyingBet) {\n            const bookmakerInfo = customer.bookmakers.find(b => b.name === current.name);\n            if (bookmakerInfo?.bonusOnlyIfLost && bookmakerInfo.bonusType === 'freebet') {\n                // TÃ¦l hvor mange \"kun hvis tab\"-freebets der allerede er pÃ¥ hvert udfald\n                const existingBonusOnlyIfLost = [...team1, ...draw, ...team2].filter(bm => {\n                    const bmInfo = customer.bookmakers.find(b => b.name === bm.name);\n                    return bmInfo?.bonusOnlyIfLost && bmInfo.bonusType === 'freebet';\n                });\n                \n                const team1Count = existingBonusOnlyIfLost.filter(bm => bm.betType === 'team1').length;\n                const drawCount = existingBonusOnlyIfLost.filter(bm => bm.betType === 'draw').length;\n                const team2Count = existingBonusOnlyIfLost.filter(bm => bm.betType === 'team2').length;\n                \n                // Prioriter det udfald der har fÃ¦rrest \"kun hvis tab\"-freebets\n                priorities = [\n                    { type: 'team1' as const, need: -team1Count, odds: current.team1, current: team1 },\n                    { type: 'draw' as const, need: -drawCount, odds: current.draw, current: draw },\n                    { type: 'team2' as const, need: -team2Count, odds: current.team2, current: team2 }\n                ]\n                .filter(p => p.odds > 0) // Fjern muligheder hvor odds er 0\n                .sort((a, b) => a.need - b.need); // Laveste count fÃ¸rst\n            }\n        }\n        \n        // Hvis der ikke er sat nogen prioriteter endnu, brug standard logik\n        if (priorities.length === 0) {\n            if (current.preferLoss) {\n                // For bookmakere der foretrÃ¦kker tab, placer dem hvor der er lavest return\n                priorities = [\n                    { type: 'team1' as const, need: -currentTeam1, odds: current.team1, current: team1 },\n                    { type: 'draw' as const, need: -currentDraw, odds: current.draw, current: draw },\n                    { type: 'team2' as const, need: -currentTeam2, odds: current.team2, current: team2 }\n                ]\n                .filter(p => p.odds > 0) // Fjern muligheder hvor odds er 0\n                .sort((a, b) => a.need - b.need);\n            } else {\n                // For normale bookmakere, placer dem hvor der er stÃ¸rst behov\n                priorities = [\n                    { type: 'team1' as const, need: targetReturnPerOutcome - currentTeam1, odds: current.team1, current: team1 },\n                    { type: 'draw' as const, need: targetReturnPerOutcome - currentDraw, odds: current.draw, current: draw },\n                    { type: 'team2' as const, need: targetReturnPerOutcome - currentTeam2, odds: current.team2, current: team2 }\n                ]\n                .filter(p => p.odds > 0) // Fjern muligheder hvor odds er 0\n                .sort((a, b) => b.need - a.need);\n            }\n        }\n\n        // Hvis der ikke er nogen gyldige muligheder, spring denne bookmaker over\n        if (priorities.length === 0) return;\n\n        // PrÃ¸v fordelingerne i prioriteret rÃ¦kkefÃ¸lge\n        for (const group of priorities) {\n            if (group.type === 'team1') {\n                tryDistribution(rest, [...team1, current], draw, team2);\n            } else if (group.type === 'draw') {\n                tryDistribution(rest, team1, [...draw, current], team2);\n            } else {\n                tryDistribution(rest, team1, draw, [...team2, current]);\n            }\n        }\n    };\n\n    tryDistribution(bookmakerReturns, [], [], []);\n\n    // Konverter den bedste fordeling til det forventede format\n    const allBookmakers = oddsData.map(bm => {\n        let betType: 'team1' | 'draw' | 'team2';\n        let potentialReturn: number;\n\n        if (bestDistribution.team1.find(b => b.name === bm.name)) {\n            betType = 'team1';\n            potentialReturn = bm.team1 * bm.fixedStake;\n        } else if (bestDistribution.draw.find(b => b.name === bm.name)) {\n            betType = 'draw';\n            potentialReturn = bm.draw * bm.fixedStake;\n        } else {\n            betType = 'team2';\n            potentialReturn = bm.team2 * bm.fixedStake;\n        }\n\n        return {\n            name: bm.name,\n            team1Odds: bm.team1,\n            drawOdds: bm.draw,\n            team2Odds: bm.team2,\n            fixedStake: bm.fixedStake,\n            actualCost: bm.actualCost,\n            minOdds: bm.minOdds,\n            preferLoss: bm.preferLoss,\n            avoidWin: bm.avoidWin,\n            betType,\n            potentialReturn\n        };\n    });\n\n    const totalStake = allBookmakers.reduce((sum, bm) => sum + bm.fixedStake, 0);\n    const totalActualCost = allBookmakers.reduce((sum, bm) => sum + bm.actualCost, 0);\n\n    const potentialReturns = {\n        team1: allBookmakers.reduce((sum, bm) => sum + (bm.betType === 'team1' ? bm.potentialReturn : 0), 0),\n        draw: allBookmakers.reduce((sum, bm) => sum + (bm.betType === 'draw' ? bm.potentialReturn : 0), 0),\n        team2: allBookmakers.reduce((sum, bm) => sum + (bm.betType === 'team2' ? bm.potentialReturn : 0), 0)\n    };\n\n    const minReturn = Math.min(\n        potentialReturns.team1,\n        potentialReturns.draw,\n        potentialReturns.team2\n    );\n\n    const profit = minReturn - totalActualCost;\n    const profitPercentage = (profit / totalActualCost) * 100;\n    const isArbitrage = profit > 0;\n\n    return {\n        allBookmakers,\n        totalStake,\n        totalActualCost,\n        potentialReturns,\n        profit,\n        profitPercentage,\n        isArbitrage\n    };\n}\n\n// Utility function to gather odds data from customer bookmakers\nexport function gatherOddsData(customer: Customer): BookmakerOdds[] {\n    const isBet2 = customer.betType === 'bonus';\n\n    return customer.bookmakers.map(bookmaker => {\n        const odds = bookmaker.odds || { team1: 0, draw: 0, team2: 0 };\n\n        // Bestem stake og actual cost baseret pÃ¥ bet type og bonus type\n        let stake = bookmaker.fixedStake;\n        let actualCost = bookmaker.actualCost;\n\n        if (isBet2) {\n            if (!bookmaker.usedInBet1) {\n                // Hvis siden ikke blev brugt i Bet 1, skal den ikke inkluderes\n                stake = 0;\n                actualCost = 0;\n            } else if (bookmaker.bonusType === 'matchingBonus') {\n                // For matching bonus, brug den indtastede saldo\n                stake = bookmaker.bet1Balance || 0;\n                // Actual cost skal vÃ¦re lig med den oprindelige indbetaling, uanset saldo\n                actualCost = bookmaker.qualifyingBetAmount || 0;\n            } else if (bookmaker.bonusType === 'freebet') {\n                // For freebets, tjek om bonus er tilgÃ¦ngelig\n                if (bookmaker.bonusOnlyIfLost && bookmaker.bet1Lost === false) {\n                    // Hvis bonus kun gives ved tab, men vi vandt, sÃ¥ ingen bonus\n                    stake = 0;\n                    actualCost = 0;\n                } else {\n                    // For freebets, brug bonus belÃ¸bet\n                    stake = bookmaker.bonusAmount || 0;\n                    // Actual cost skal vÃ¦re lig med freebet belÃ¸bet\n                    actualCost = bookmaker.bonusAmount || 0;\n                }\n            }\n        }\n\n        // Marker odds under minimum ved at sÃ¦tte dem til 0\n        const validTeam1 = odds.team1 >= bookmaker.minOdds ? odds.team1 : 0;\n        const validDraw = odds.draw >= bookmaker.minOdds ? odds.draw : 0;\n        const validTeam2 = odds.team2 >= bookmaker.minOdds ? odds.team2 : 0;\n\n        return {\n            name: bookmaker.name,\n            fixedStake: stake,  // Brug den beregnede stake\n            actualCost: actualCost,  // Brug den beregnede actual cost\n            minOdds: bookmaker.minOdds,\n            preferLoss: bookmaker.preferLoss,\n            avoidWin: bookmaker.avoidWin,\n            isActive: bookmaker.isActive,\n            team1: validTeam1,\n            draw: validDraw,\n            team2: validTeam2,\n            originalOdds: {\n                team1: odds.team1,\n                draw: odds.draw,\n                team2: odds.team2\n            }\n        };\n    }).filter(odds => {\n        // I Bet 2, tjek ogsÃ¥ at der er en gyldig stake og at siden blev brugt i Bet 1\n        const hasValidStake = !isBet2 || odds.fixedStake > 0;\n        const isUsedInBet2 = !isBet2 || customer.bookmakers.find(b => b.name === odds.name)?.usedInBet1;\n        // Tjek at mindst Ã©t gyldigt odds er indtastet og at bookmakeren er aktiv\n        const hasValidOdds = odds.team1 > 0 || odds.draw > 0 || odds.team2 > 0;\n        return hasValidOdds && odds.isActive && hasValidStake && isUsedInBet2;\n    });\n}\n\n// CSV template generation\nexport function generateCsvTemplate(customers: Customer[]): string {\n    const bookmakers = customers.length === 0 ? BOOKMAKERS : customers[0].bookmakers;\n    const headers = ['Bookmaker', 'Hold 1', 'Uafgjort', 'Hold 2'];\n    \n    const rows = bookmakers.map(bookmaker => [bookmaker.name, '', '', '']);\n    \n    const csvContent = '\\uFEFF' + [\n        headers.join(','),\n        ...rows.map(row => row.join(','))\n    ].join('\\r\\n');\n    \n    return csvContent;\n}\n\n// Parse CSV data\nexport function parseCsvData(csvContent: string, customer: Customer): number {\n    try {\n        const lines = csvContent.split('\\n').filter(line => line.trim());\n        const headers = lines[0].split(',').map(h => h.trim().toLowerCase());\n        \n        // Support both Danish and English column names\n        const bookmakerIndex = headers.findIndex(h => \n            h.includes('bookmaker') || h.includes('bookie') || h.includes('site')\n        );\n        const team1Index = headers.findIndex(h => \n            h.includes('team1') || h.includes('hold 1') || h.includes('home')\n        );\n        const drawIndex = headers.findIndex(h => \n            h.includes('draw') || h.includes('uafgjort') || h.includes('x')\n        );\n        const team2Index = headers.findIndex(h => \n            h.includes('team2') || h.includes('hold 2') || h.includes('away')\n        );\n\n        if (bookmakerIndex === -1 || team1Index === -1 || drawIndex === -1 || team2Index === -1) {\n            throw new Error('CSV skal indeholde kolonner med bookmaker navn og odds for alle tre udfald');\n        }\n\n        let uploadedCount = 0;\n\n        // Parse data rows\n        for (let i = 1; i < lines.length; i++) {\n            const values = lines[i].split(',').map(v => v.trim());\n            \n            if (values.length < Math.max(bookmakerIndex, team1Index, drawIndex, team2Index) + 1) {\n                continue; // Skip incomplete rows\n            }\n\n            const bookmakerName = values[bookmakerIndex];\n            const team1OddsStr = values[team1Index].replace(',', '.'); // Handle Danish decimal separator\n            const drawOddsStr = values[drawIndex].replace(',', '.');\n            const team2OddsStr = values[team2Index].replace(',', '.');\n            \n            const team1Odds = parseFloat(team1OddsStr);\n            const drawOdds = parseFloat(drawOddsStr);\n            const team2Odds = parseFloat(team2OddsStr);\n\n            // Skip if any odds are invalid\n            if (isNaN(team1Odds) || isNaN(drawOdds) || isNaN(team2Odds)) {\n                console.warn(`Skipping row ${i + 1}: Invalid odds for ${bookmakerName}`);\n                continue;\n            }\n\n            // Find matching bookmaker (case-insensitive)\n            const bookmakerIndex_inArray = customer.bookmakers.findIndex(bm => \n                bm.name.toLowerCase() === bookmakerName.toLowerCase()\n            );\n\n            if (bookmakerIndex_inArray !== -1) {\n                customer.bookmakers[bookmakerIndex_inArray].odds = {\n                    team1: team1Odds,\n                    draw: drawOdds,\n                    team2: team2Odds\n                };\n                customer.bookmakers[bookmakerIndex_inArray].isActive = true;\n                uploadedCount++;\n            } else {\n                console.warn(`Bookmaker not found: ${bookmakerName}`);\n            }\n        }\n\n        return uploadedCount;\n    } catch (error) {\n        console.error('Error parsing CSV:', error);\n        throw error;\n    }\n}\n\n// Save calculation function for React integration\nexport async function saveCalculation(calculationData: any, getToken: () => Promise<string>) {\n    try {\n        const token = await getToken();\n        const response = await fetch('/api/calculations/save', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            },\n            body: JSON.stringify(calculationData),\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to save calculation');\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error('Error saving calculation:', error);\n        throw error;\n    }\n}\n\n// Export the main calculator functions that will be used by React\nexport {\n    BOOKMAKERS,\n    customers,\n    currentCustomerId,\n    currentBetType,\n    lastCalculatedResult\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 902, "column": 0}, "map": {"version":3,"sources":["file:///Users/konradkjems/Desktop/Cursor-Projects/better-bets/src/components/calculator/Calculator.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '@clerk/nextjs';\nimport { ProtectedContent } from '../auth/AuthButton';\nimport { \n  Customer, \n  BOOKMAKERS,\n  calculateArbitrage,\n  gatherOddsData,\n  BookmakerInfo,\n  ArbitrageResult\n} from '../../lib/calculator';\nimport { CsvManager } from '../csv/CsvManager';\nimport { CsvImportResult } from '../../lib/csv-utils';\n\nexport function Calculator() {\n  const { getToken } = useAuth();\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [currentCustomerId, setCurrentCustomerId] = useState<string | null>(null);\n  const [currentBetType, setCurrentBetType] = useState<'qualifying' | 'bonus'>('qualifying');\n  const [lastCalculatedResult, setLastCalculatedResult] = useState<ArbitrageResult | null>(null);\n  const [saveStatus, setSaveStatus] = useState<'idle' | 'saving' | 'saved' | 'error'>('idle');\n  const [showCustomerForm, setShowCustomerForm] = useState(false);\n  const [newCustomerName, setNewCustomerName] = useState('');\n  const [team1Name, setTeam1Name] = useState('');\n  const [team2Name, setTeam2Name] = useState('');\n\n  // Initialize calculator when component mounts\n  useEffect(() => {\n    // Initialize the vanilla TS calculator functionality\n    initializeCalculator();\n  }, []);\n\n  const initializeCalculator = () => {\n    // This will initialize the calculator UI and functionality\n    // For now, we'll create a basic structure\n  };\n\n  const getCurrentCustomer = (): Customer | null => {\n    return customers.find(c => c.id === currentCustomerId) || customers[0] || null;\n  };\n\n  const addCustomer = () => {\n    if (!newCustomerName.trim() || !team1Name.trim() || !team2Name.trim()) {\n      alert('Du skal udfylde alle felter for at fortsÃ¦tte');\n      return;\n    }\n\n    const newId = `kunde${customers.length + 1}`;\n    const newCustomer: Customer = {\n      id: newId,\n      name: newCustomerName,\n      bookmakers: BOOKMAKERS.map(bm => ({...bm})),\n      teamNames: {\n        team1: team1Name,\n        team2: team2Name\n      },\n      betType: 'qualifying'\n    };\n    \n    setCustomers([...customers, newCustomer]);\n    setCurrentCustomerId(newId);\n    setCurrentBetType('qualifying');\n    setShowCustomerForm(false);\n    setNewCustomerName('');\n    setTeam1Name('');\n    setTeam2Name('');\n  };\n\n  const switchCustomer = (customerId: string) => {\n    setCurrentCustomerId(customerId);\n    const customer = customers.find(c => c.id === customerId);\n    if (customer) {\n      setCurrentBetType(customer.betType);\n    }\n  };\n\n  const switchBetType = (betType: 'qualifying' | 'bonus') => {\n    setCurrentBetType(betType);\n    const customer = getCurrentCustomer();\n    if (customer) {\n      customer.betType = betType;\n      setCustomers([...customers]);\n    }\n  };\n\n  const calculateArbitrageHandler = () => {\n    const customer = getCurrentCustomer();\n    if (!customer) {\n      alert('VÃ¦lg en kunde fÃ¸rst');\n      return;\n    }\n\n    // Collect odds data from active bookmakers using the utility function\n    const oddsData = gatherOddsData(customer);\n\n    if (oddsData.length === 0) {\n      alert('Indtast odds for mindst Ã©n aktiv bookmaker');\n      return;\n    }\n\n    // Use the advanced arbitrage calculation from calculator.ts\n    const result = calculateArbitrage(oddsData, customer);\n    setLastCalculatedResult(result);\n  };\n\n  const saveCalculationHandler = async (calculationData: any) => {\n    try {\n      const token = await getToken();\n      if (!token) throw new Error('No authentication token available');\n      \n      const response = await fetch('/api/calculations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify(calculationData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save calculation');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error saving calculation:', error);\n      throw error;\n    }\n  };\n\n  const handleSaveCalculation = async () => {\n    if (!lastCalculatedResult) return;\n\n    try {\n      setSaveStatus('saving');\n      \n      const customer = getCurrentCustomer();\n      if (!customer) {\n        throw new Error('No customer selected');\n      }\n\n      const calculationData = {\n        customerName: customer.name,\n        teamNames: customer.teamNames,\n        betType: currentBetType,\n        bookmakers: lastCalculatedResult.allBookmakers,\n        results: {\n          totalStake: lastCalculatedResult.totalStake,\n          totalActualCost: lastCalculatedResult.totalActualCost,\n          potentialReturns: lastCalculatedResult.potentialReturns,\n          profit: lastCalculatedResult.profit,\n          profitPercentage: lastCalculatedResult.profitPercentage,\n          isArbitrage: lastCalculatedResult.isArbitrage,\n        }\n      };\n\n      await saveCalculationHandler(calculationData);\n      setSaveStatus('saved');\n      \n      // Reset status after 3 seconds\n      setTimeout(() => setSaveStatus('idle'), 3000);\n    } catch (error) {\n      console.error('Error saving calculation:', error);\n      setSaveStatus('error');\n      setTimeout(() => setSaveStatus('idle'), 3000);\n    }\n  };\n\n  const handleCsvImportComplete = (result: CsvImportResult) => {\n    if (result.success) {\n      setCustomers([...customers]);\n    }\n    \n    // Show result message\n    if (result.errors.length > 0) {\n      alert(`Fejl: ${result.errors.join(', ')}`);\n    } else if (result.warnings.length > 0) {\n      alert(`Advarsler: ${result.warnings.join(', ')}`);\n    } else {\n      alert(`Odds uploadet for ${result.importedCount} bookmakere`);\n    }\n  };\n\n  return (\n    <ProtectedContent>\n      <div className=\"max-w-3xl mx-auto mb-8 bg-blue-50 rounded-xl p-6 shadow-sm\">\n        <h2 className=\"text-xl font-bold text-blue-800 mb-4\">SÃ¥dan kommer du i gang:</h2>\n        <ol className=\"space-y-3 text-blue-900\">\n          <li className=\"flex items-start gap-3\">\n            <span className=\"flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center font-bold\">1</span>\n            <span>Klik pÃ¥ \"Start Ny Beregning\" og indtast dit navn samt navnene pÃ¥ de to hold du vil beregne odds for.</span>\n          </li>\n          <li className=\"flex items-start gap-3\">\n            <span className=\"flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center font-bold\">2</span>\n            <span>Indtast odds fra forskellige bookmakere. Du kan enten:\n              <ul className=\"ml-9 mt-2 space-y-1 list-disc text-blue-800\">\n                <li>Indtaste odds manuelt for hver bookmaker</li>\n                <li>Downloade vores CSV-skabelon, udfylde den og uploade den igen</li>\n              </ul>\n            </span>\n          </li>\n          <li className=\"flex items-start gap-3\">\n            <span className=\"flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center font-bold\">3</span>\n            <span>Brug toggle-knapperne ved siden af hver bookmaker for at vÃ¦lge hvilke bookmakere der skal indgÃ¥ i beregningen.</span>\n          </li>\n          <li className=\"flex items-start gap-3\">\n            <span className=\"flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center font-bold\">4</span>\n            <span>Klik pÃ¥ \"Find Bedste Arbitrage Mulighed\" for at se den optimale fordeling af indsatser.</span>\n          </li>\n        </ol>\n        <div className=\"mt-4 pt-4 border-t border-blue-200\">\n          <p className=\"text-blue-800 font-medium\">ð¡ Tips:</p>\n          <ul className=\"mt-2 space-y-1 list-disc ml-5 text-blue-800\">\n            <li>Jo flere bookmakere du inkluderer, jo stÃ¸rre chance er der for at finde en god arbitrage mulighed</li>\n            <li>SÃ¸rg for at odds er indtastet korrekt - selv smÃ¥ fejl kan pÃ¥virke resultatet</li>\n            <li>Hold Ã¸je med minimum odds kravene for hver bookmaker</li>\n          </ul>\n        </div>\n      </div>\n      \n      {/* Customer Selector */}\n      <div className=\"mb-6 bg-white rounded-xl shadow-sm p-4\">\n        {customers.length === 0 ? (\n          <div className=\"text-center py-4\">\n            <button \n              onClick={() => setShowCustomerForm(true)}\n              className=\"btn-primary\"\n            >\n              Start Ny Beregning\n            </button>\n            <p className=\"text-gray-600 mt-2\">Tryk pÃ¥ knappen ovenfor for at starte en ny beregning</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-4\">\n                <select \n                  value={currentCustomerId || ''} \n                  onChange={(e) => switchCustomer(e.target.value)}\n                  className=\"input-field max-w-xs\"\n                >\n                  {customers.map(customer => (\n                    <option key={customer.id} value={customer.id}>\n                      {customer.name}\n                    </option>\n                  ))}\n                </select>\n                <button \n                  onClick={() => setShowCustomerForm(true)}\n                  className=\"btn-secondary\"\n                >\n                  TilfÃ¸j ny kunde\n                </button>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <label className=\"text-sm font-medium text-gray-700\">Bet Type:</label>\n                <select \n                  value={currentBetType} \n                  onChange={(e) => switchBetType(e.target.value as 'qualifying' | 'bonus')}\n                  className=\"input-field\"\n                >\n                  <option value=\"qualifying\">Bet 1 (Kvalificerende)</option>\n                  <option value=\"bonus\">Bet 2 (Bonus og Freebets)</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hold 1</label>\n                <input \n                  type=\"text\" \n                  className=\"input-field\" \n                  placeholder=\"Indtast navn pÃ¥ hold 1\"\n                  value={getCurrentCustomer()?.teamNames?.team1 || ''}\n                  onChange={(e) => {\n                    const customer = getCurrentCustomer();\n                    if (customer && customer.teamNames) {\n                      customer.teamNames.team1 = e.target.value;\n                      setCustomers([...customers]);\n                    }\n                  }}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hold 2</label>\n                <input \n                  type=\"text\" \n                  className=\"input-field\" \n                  placeholder=\"Indtast navn pÃ¥ hold 2\"\n                  value={getCurrentCustomer()?.teamNames?.team2 || ''}\n                  onChange={(e) => {\n                    const customer = getCurrentCustomer();\n                    if (customer && customer.teamNames) {\n                      customer.teamNames.team2 = e.target.value;\n                      setCustomers([...customers]);\n                    }\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Customer Form Modal */}\n        {showCustomerForm && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h2 className=\"text-xl font-bold mb-4\">Ny Beregning</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Kundenavn</label>\n                  <input \n                    type=\"text\" \n                    className=\"input-field w-full\" \n                    placeholder=\"Indtast kundens navn\"\n                    value={newCustomerName}\n                    onChange={(e) => setNewCustomerName(e.target.value)}\n                  />\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hold 1</label>\n                    <input \n                      type=\"text\" \n                      className=\"input-field w-full\" \n                      placeholder=\"Indtast navn pÃ¥ hold 1\"\n                      value={team1Name}\n                      onChange={(e) => setTeam1Name(e.target.value)}\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hold 2</label>\n                    <input \n                      type=\"text\" \n                      className=\"input-field w-full\" \n                      placeholder=\"Indtast navn pÃ¥ hold 2\"\n                      value={team2Name}\n                      onChange={(e) => setTeam2Name(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex justify-end gap-2 mt-4\">\n                  <button \n                    onClick={() => setShowCustomerForm(false)}\n                    className=\"btn-secondary\"\n                  >\n                    Annuller\n                  </button>\n                  <button \n                    onClick={addCustomer}\n                    className=\"btn-primary\"\n                  >\n                    FortsÃ¦t til odds\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"flex flex-col lg:flex-row gap-6\">\n        {/* Left side - Odds input */}\n        <div className=\"lg:w-1/2\">\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div>\n                <h2 className=\"text-xl font-bold text-gray-800\">Bookmaker Odds</h2>\n                <p className=\"text-sm text-gray-600 mt-1\">Indtast odds for hver bookmaker</p>\n              </div>\n              <div className=\"flex gap-3\">\n                <label className=\"btn-secondary flex items-center gap-2 cursor-pointer\">\n                  <input \n                    type=\"file\" \n                    accept=\".csv\" \n                    onChange={handleCsvUpload}\n                    className=\"hidden\"\n                  />\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"/>\n                  </svg>\n                  Upload CSV\n                </label>\n                <button \n                  className=\"btn-secondary flex items-center gap-2\"\n                  onClick={downloadTemplateHandler}\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"/>\n                  </svg>\n                  Download Skabelon\n                </button>\n              </div>\n            </div>\n            <div className=\"overflow-y-auto max-h-[calc(100vh-300px)]\">\n              {getCurrentCustomer() ? (\n                <div className=\"space-y-4\">\n                  {getCurrentCustomer()!.bookmakers.map((bookmaker, index) => (\n                    <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <div>\n                          <div className=\"flex items-center gap-2\">\n                            <h3 className=\"font-semibold text-gray-800\">{bookmaker.name}</h3>\n                            <label className=\"relative inline-flex items-center cursor-pointer\">\n                              <input \n                                type=\"checkbox\" \n                                className=\"sr-only peer\" \n                                checked={bookmaker.isActive}\n                                onChange={(e) => {\n                                  const customer = getCurrentCustomer();\n                                  if (customer) {\n                                    customer.bookmakers[index].isActive = e.target.checked;\n                                    setCustomers([...customers]);\n                                  }\n                                }}\n                              />\n                              <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-blue-600\"></div>\n                            </label>\n                          </div>\n                          <p className=\"text-sm text-gray-600\">\n                            Min. odds: {bookmaker.minOdds} | Indsats: {bookmaker.fixedStake} DKK\n                          </p>\n                          {bookmaker.bonusType !== 'none' && (\n                            <div className=\"mt-1\">\n                              <div className=\"flex items-center gap-2\">\n                                <span className={`inline-flex items-center px-2 py-1 rounded-md text-sm ${\n                                  bookmaker.bonusType === 'freebet' ? 'bg-green-100 text-green-800' : \n                                  'bg-blue-100 text-blue-800'\n                                }`}>\n                                  {bookmaker.bonusType === 'freebet' ? 'Freebet' : 'Matching Bonus'}: \n                                  {bookmaker.bonusAmount} DKK\n                                  {bookmaker.isBonusLocked ? ' ð' : ' â'}\n                                  {bookmaker.bonusOnlyIfLost ? ' (kun hvis tabt)' : ''}\n                                </span>\n                                {currentBetType === 'bonus' && (\n                                  <label className=\"flex items-center gap-1\">\n                                    <input \n                                      type=\"checkbox\" \n                                      className=\"form-checkbox h-4 w-4 text-blue-600\"\n                                      checked={bookmaker.usedInBet1 || false}\n                                      onChange={(e) => {\n                                        const customer = getCurrentCustomer();\n                                        if (customer) {\n                                          customer.bookmakers[index].usedInBet1 = e.target.checked;\n                                          setCustomers([...customers]);\n                                        }\n                                      }}\n                                    />\n                                    <span className=\"text-sm text-gray-600\">Brugt i Bet 1</span>\n                                  </label>\n                                )}\n                              </div>\n                              <p className=\"text-xs text-gray-600 mt-1\">\n                                KrÃ¦ver {bookmaker.qualifyingBetAmount} DKK kvalificerende bet med min. odds {bookmaker.bonusMinOdds}\n                                {bookmaker.bonusOnlyIfLost ? ' - Bonus kun hvis kvalificerende bet tabes (spil pÃ¥ underdog)' : ''}\n                              </p>\n                              \n                              {/* Bet 2 specific fields */}\n                              {currentBetType === 'bonus' && (\n                                <div className=\"mt-2\">\n                                  {bookmaker.bonusType === 'matchingBonus' && (\n                                    <div className=\"flex items-center gap-2\">\n                                      <label className=\"text-sm text-gray-600\">Saldo fra Bet 1:</label>\n                                      <input \n                                        type=\"number\" \n                                        className=\"input-field w-32\" \n                                        value={bookmaker.bet1Balance || ''}\n                                        placeholder=\"DKK\"\n                                        disabled={!bookmaker.usedInBet1}\n                                        onChange={(e) => {\n                                          const customer = getCurrentCustomer();\n                                          if (customer) {\n                                            customer.bookmakers[index].bet1Balance = parseFloat(e.target.value) || 0;\n                                            setCustomers([...customers]);\n                                          }\n                                        }}\n                                      />\n                                    </div>\n                                  )}\n                                  \n                                  {bookmaker.bonusType === 'freebet' && (\n                                    <div className=\"space-y-2\">\n                                      {bookmaker.bonusOnlyIfLost && (\n                                        <div className=\"space-y-2\">\n                                          <div className=\"flex items-center gap-2\">\n                                            <label className=\"text-sm text-gray-600\">Bet 1 resultat:</label>\n                                            <div className=\"flex items-center gap-2\">\n                                              <label className=\"flex items-center gap-1\">\n                                                <input \n                                                  type=\"radio\" \n                                                  name={`${bookmaker.name}-bet1-result`}\n                                                  value=\"lost\"\n                                                  className=\"form-radio h-4 w-4 text-red-600\"\n                                                  checked={bookmaker.bet1Lost === true}\n                                                  onChange={() => {\n                                                    const customer = getCurrentCustomer();\n                                                    if (customer) {\n                                                      customer.bookmakers[index].bet1Lost = true;\n                                                      setCustomers([...customers]);\n                                                    }\n                                                  }}\n                                                />\n                                                <span className=\"text-sm text-red-600\">Tabt</span>\n                                              </label>\n                                              <label className=\"flex items-center gap-1\">\n                                                <input \n                                                  type=\"radio\" \n                                                  name={`${bookmaker.name}-bet1-result`}\n                                                  value=\"won\"\n                                                  className=\"form-radio h-4 w-4 text-green-600\"\n                                                  checked={bookmaker.bet1Lost === false}\n                                                  onChange={() => {\n                                                    const customer = getCurrentCustomer();\n                                                    if (customer) {\n                                                      customer.bookmakers[index].bet1Lost = false;\n                                                      setCustomers([...customers]);\n                                                    }\n                                                  }}\n                                                />\n                                                <span className=\"text-sm text-green-600\">Vundet</span>\n                                              </label>\n                                            </div>\n                                          </div>\n                                          <div className=\"text-xs text-gray-600 bg-blue-50 p-2 rounded border-l-4 border-blue-400\">\n                                            <strong>ð¡ Freebet betingelse:</strong> \n                                            <span className=\"ml-1\">\n                                              {bookmaker.bet1Lost === true ? \n                                                <span className=\"text-green-600 font-medium\">â Freebet er tilgÃ¦ngelig (Bet 1 blev tabt)</span> : \n                                                bookmaker.bet1Lost === false ? \n                                                  <span className=\"text-red-600 font-medium\">â Freebet ikke tilgÃ¦ngelig (Bet 1 blev vundet)</span> :\n                                                  <span className=\"text-gray-500\">VÃ¦lg Bet 1 resultat for at se om freebet er tilgÃ¦ngelig</span>\n                                              }\n                                            </span>\n                                          </div>\n                                        </div>\n                                      )}\n                                      <div className=\"flex items-center gap-2\">\n                                        <label className=\"text-sm text-gray-600\">Gevinst fra Bet 1:</label>\n                                        <input \n                                          type=\"number\" \n                                          className=\"input-field w-32\" \n                                          value={bookmaker.bet1Profit || ''}\n                                          placeholder=\"DKK\"\n                                          onChange={(e) => {\n                                            const customer = getCurrentCustomer();\n                                            if (customer) {\n                                              customer.bookmakers[index].bet1Profit = parseFloat(e.target.value) || 0;\n                                              setCustomers([...customers]);\n                                            }\n                                          }}\n                                        />\n                                        <div className=\"text-xs text-gray-500 ml-2\">\n                                          {bookmaker.usedInBet1 ? `(Freebet: ${bookmaker.bonusAmount} DKK)` : '(Ikke brugt i Bet 1)'}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-3 gap-4\">\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hold 1</label>\n                          <input \n                            type=\"number\" \n                            step=\"0.01\" \n                            min={bookmaker.minOdds}\n                            className=\"input-field\" \n                            placeholder=\"Odds\"\n                            value={bookmaker.odds?.team1 || ''}\n                            onChange={(e) => {\n                              const customer = getCurrentCustomer();\n                              if (customer) {\n                                if (!customer.bookmakers[index].odds) {\n                                  customer.bookmakers[index].odds = { team1: 0, draw: 0, team2: 0 };\n                                }\n                                customer.bookmakers[index].odds!.team1 = parseFloat(e.target.value) || 0;\n                                setCustomers([...customers]);\n                              }\n                            }}\n                          />\n                          <div className=\"text-xs text-red-600 hidden mt-1\">\n                            Min. {bookmaker.minOdds}\n                          </div>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Uafgjort</label>\n                          <input \n                            type=\"number\" \n                            step=\"0.01\" \n                            min={bookmaker.minOdds}\n                            className=\"input-field\" \n                            placeholder=\"Odds\"\n                            value={bookmaker.odds?.draw || ''}\n                            onChange={(e) => {\n                              const customer = getCurrentCustomer();\n                              if (customer) {\n                                if (!customer.bookmakers[index].odds) {\n                                  customer.bookmakers[index].odds = { team1: 0, draw: 0, team2: 0 };\n                                }\n                                customer.bookmakers[index].odds!.draw = parseFloat(e.target.value) || 0;\n                                setCustomers([...customers]);\n                              }\n                            }}\n                          />\n                          <div className=\"text-xs text-red-600 hidden mt-1\">\n                            Min. {bookmaker.minOdds}\n                          </div>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hold 2</label>\n                          <input \n                            type=\"number\" \n                            step=\"0.01\" \n                            min={bookmaker.minOdds}\n                            className=\"input-field\" \n                            placeholder=\"Odds\"\n                            value={bookmaker.odds?.team2 || ''}\n                            onChange={(e) => {\n                              const customer = getCurrentCustomer();\n                              if (customer) {\n                                if (!customer.bookmakers[index].odds) {\n                                  customer.bookmakers[index].odds = { team1: 0, draw: 0, team2: 0 };\n                                }\n                                customer.bookmakers[index].odds!.team2 = parseFloat(e.target.value) || 0;\n                                setCustomers([...customers]);\n                              }\n                            }}\n                          />\n                          <div className=\"text-xs text-red-600 hidden mt-1\">\n                            Min. {bookmaker.minOdds}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8 text-gray-500\">\n                  Opret en kunde for at indtaste odds\n                </div>\n              )}\n            </div>\n            <div className=\"mt-6 pt-4 border-t border-gray-100\">\n              <button \n                className=\"btn-primary flex items-center justify-center gap-2\"\n                onClick={calculateArbitrageHandler}\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\"/>\n                </svg>\n                Find Bedste Arbitrage Mulighed\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Right side - Results */}\n        <div className=\"lg:w-1/2\">\n          {lastCalculatedResult ? (\n            <div className=\"bg-white rounded-xl shadow-sm p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <div>\n                  <h2 className=\"text-xl font-bold text-gray-800\">Arbitrage Muligheder</h2>\n                  <p className=\"text-sm text-gray-600 mt-1\">Beregnede indsatser og potentielle gevinster</p>\n                </div>\n                <button\n                  onClick={handleSaveCalculation}\n                  disabled={saveStatus === 'saving'}\n                  className={`btn-secondary ${\n                    saveStatus === 'saved' ? 'bg-green-100 text-green-800' :\n                    saveStatus === 'error' ? 'bg-red-100 text-red-800' :\n                    saveStatus === 'saving' ? 'opacity-50' : ''\n                  }`}\n                >\n                  {saveStatus === 'saving' ? 'Saving...' :\n                   saveStatus === 'saved' ? 'Saved!' :\n                   saveStatus === 'error' ? 'Error' :\n                   'Save Calculation'}\n                </button>\n              </div>\n              \n              <div className=\"mb-6 p-4 bg-gray-50 rounded-lg border border-gray-100\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <div className={`font-semibold text-lg mb-2 ${\n                      lastCalculatedResult.isArbitrage ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      {lastCalculatedResult.isArbitrage ? 'â Arbitrage mulighed!' : 'â Ingen arbitrage'}\n                    </div>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">Total indsats:</span>\n                        <span className=\"font-medium\">{lastCalculatedResult.totalStake.toLocaleString('da-DK')} DKK</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">Faktisk omkostning:</span>\n                        <span className=\"font-medium\">{lastCalculatedResult.totalActualCost.toLocaleString('da-DK')} DKK</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold text-gray-800 mb-2\">Potentielle gevinster:</div>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">Hold 1:</span>\n                        <span className=\"font-medium\">{lastCalculatedResult.potentialReturns.team1.toLocaleString('da-DK')} DKK</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">Uafgjort:</span>\n                        <span className=\"font-medium\">{lastCalculatedResult.potentialReturns.draw.toLocaleString('da-DK')} DKK</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600\">Hold 2:</span>\n                        <span className=\"font-medium\">{lastCalculatedResult.potentialReturns.team2.toLocaleString('da-DK')} DKK</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-4 pt-4 border-t border-gray-200\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-gray-700 font-medium\">Garanteret profit:</span>\n                    <span className={`text-lg font-bold ${\n                      lastCalculatedResult.isArbitrage ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      {lastCalculatedResult.profit.toLocaleString('da-DK')} DKK ({lastCalculatedResult.profitPercentage.toFixed(2)}%)\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Detailed Bookmaker Table */}\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm\">\n                  <thead>\n                    <tr className=\"border-b border-gray-200\">\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">Bookmaker</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">\n                        {getCurrentCustomer()?.teamNames?.team1 || 'Hold 1'}\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">Uafgjort</th>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-700\">\n                        {getCurrentCustomer()?.teamNames?.team2 || 'Hold 2'}\n                      </th>\n                      <th className=\"px-4 py-3 text-right text-sm font-semibold text-gray-700\">Indsats</th>\n                      <th className=\"px-4 py-3 text-right text-sm font-semibold text-gray-700\">Gevinst</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {lastCalculatedResult.allBookmakers.map((bm: any, index: number) => {\n                      // Calculate potential win based on betType\n                      const potentialWin = bm.betType === 'team1' ? bm.team1Odds * bm.fixedStake :\n                                          bm.betType === 'draw' ? bm.drawOdds * bm.fixedStake :\n                                          bm.team2Odds * bm.fixedStake;\n\n                      return (\n                        <tr key={index} className=\"hover:bg-gray-50 transition-colors duration-150\">\n                          <td className=\"px-4 py-3\">\n                            <div className=\"font-medium text-gray-900\">{bm.name}</div>\n                            {bm.actualCost !== bm.fixedStake && (\n                              <div className=\"text-xs text-green-600\">Med bonus</div>\n                            )}\n                          </td>\n                          <td className=\"px-4 py-3\">\n                            <div className=\"flex items-center gap-1\">\n                              {bm.team1Odds.toFixed(2)}\n                              {bm.betType === 'team1' && (\n                                <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-medium text-green-700 bg-green-100 rounded-full\">\n                                  Spil pÃ¥ {getCurrentCustomer()?.teamNames?.team1 || 'Hold 1'}\n                                </span>\n                              )}\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3\">\n                            <div className=\"flex items-center gap-1\">\n                              {bm.drawOdds.toFixed(2)}\n                              {bm.betType === 'draw' && (\n                                <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-medium text-green-700 bg-green-100 rounded-full\">\n                                  Spil pÃ¥ Uafgjort\n                                </span>\n                              )}\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3\">\n                            <div className=\"flex items-center gap-1\">\n                              {bm.team2Odds.toFixed(2)}\n                              {bm.betType === 'team2' && (\n                                <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-medium text-green-700 bg-green-100 rounded-full\">\n                                  Spil pÃ¥ {getCurrentCustomer()?.teamNames?.team2 || 'Hold 2'}\n                                </span>\n                              )}\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 text-right\">\n                            <div className=\"font-medium\">{bm.fixedStake.toLocaleString('da-DK')} DKK</div>\n                            {bm.actualCost !== bm.fixedStake && (\n                              <div className=\"text-xs text-green-600\">{bm.actualCost.toLocaleString('da-DK')} DKK</div>\n                            )}\n                          </td>\n                          <td className=\"px-4 py-3 text-right\">\n                            <div className=\"font-medium text-green-600\">{potentialWin.toLocaleString('da-DK')} DKK</div>\n                            {bm.actualCost !== bm.fixedStake && (\n                              <div className=\"text-xs text-green-600\">\n                                Profit: {(potentialWin - bm.actualCost).toLocaleString('da-DK')} DKK\n                              </div>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                    \n                    {/* Total row */}\n                    <tr className=\"bg-gray-50 font-semibold border-t-2 border-gray-200\">\n                      <td className=\"px-4 py-3\">Total</td>\n                      <td className=\"px-4 py-3 text-right\">{lastCalculatedResult.potentialReturns.team1.toLocaleString('da-DK')} DKK</td>\n                      <td className=\"px-4 py-3 text-right\">{lastCalculatedResult.potentialReturns.draw.toLocaleString('da-DK')} DKK</td>\n                      <td className=\"px-4 py-3 text-right\">{lastCalculatedResult.potentialReturns.team2.toLocaleString('da-DK')} DKK</td>\n                      <td className=\"px-4 py-3 text-right\">\n                        <div>{lastCalculatedResult.totalStake.toLocaleString('da-DK')} DKK</div>\n                        <div className=\"text-sm text-gray-600\">{lastCalculatedResult.totalActualCost.toLocaleString('da-DK')} DKK</div>\n                      </td>\n                      <td className=\"px-4 py-3 text-right\">\n                        <div className=\"text-green-600\">\n                          Min: {Math.min(\n                            lastCalculatedResult.potentialReturns.team1,\n                            lastCalculatedResult.potentialReturns.draw,\n                            lastCalculatedResult.potentialReturns.team2\n                          ).toLocaleString('da-DK')} DKK\n                        </div>\n                        <div className=\"text-sm text-green-600\">\n                          Max: {Math.max(\n                            lastCalculatedResult.potentialReturns.team1,\n                            lastCalculatedResult.potentialReturns.draw,\n                            lastCalculatedResult.potentialReturns.team2\n                          ).toLocaleString('da-DK')} DKK\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          ) : (\n            <div className=\"bg-white rounded-xl shadow-sm p-6 text-center\">\n              <svg className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\"/>\n              </svg>\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Ingen beregninger endnu</h3>\n              <p className=\"text-gray-600\">Indtast odds og tryk pÃ¥ \"Find Bedste Arbitrage Mulighed\" for at se resultater</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </ProtectedContent>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAgBO,SAAS;IACd,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,6PAAO;IAC5B,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAa,EAAE;IACzD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAAgB;IAC1E,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iNAAQ,EAAyB;IAC7E,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,IAAA,iNAAQ,EAAyB;IACzF,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAwC;IACpF,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAE3C,8CAA8C;IAC9C,IAAA,kNAAS,EAAC;QACR,qDAAqD;QACrD;IACF,GAAG,EAAE;IAEL,MAAM,uBAAuB;IAC3B,2DAA2D;IAC3D,0CAA0C;IAC5C;IAEA,MAAM,qBAAqB;QACzB,OAAO,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,sBAAsB,SAAS,CAAC,EAAE,IAAI;IAC5E;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI;YACrE,MAAM;YACN;QACF;QAEA,MAAM,QAAQ,CAAC,KAAK,EAAE,UAAU,MAAM,GAAG,GAAG;QAC5C,MAAM,cAAwB;YAC5B,IAAI;YACJ,MAAM;YACN,YAAY,sIAAU,CAAC,GAAG,CAAC,CAAA,KAAM,CAAC;oBAAC,GAAG,EAAE;gBAAA,CAAC;YACzC,WAAW;gBACT,OAAO;gBACP,OAAO;YACT;YACA,SAAS;QACX;QAEA,aAAa;eAAI;YAAW;SAAY;QACxC,qBAAqB;QACrB,kBAAkB;QAClB,oBAAoB;QACpB,mBAAmB;QACnB,aAAa;QACb,aAAa;IACf;IAEA,MAAM,iBAAiB,CAAC;QACtB,qBAAqB;QACrB,MAAM,WAAW,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC9C,IAAI,UAAU;YACZ,kBAAkB,SAAS,OAAO;QACpC;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,kBAAkB;QAClB,MAAM,WAAW;QACjB,IAAI,UAAU;YACZ,SAAS,OAAO,GAAG;YACnB,aAAa;mBAAI;aAAU;QAC7B;IACF;IAEA,MAAM,4BAA4B;QAChC,MAAM,WAAW;QACjB,IAAI,CAAC,UAAU;YACb,MAAM;YACN;QACF;QAEA,sEAAsE;QACtE,MAAM,WAAW,IAAA,0IAAc,EAAC;QAEhC,IAAI,SAAS,MAAM,KAAK,GAAG;YACzB,MAAM;YACN;QACF;QAEA,4DAA4D;QAC5D,MAAM,SAAS,IAAA,8IAAkB,EAAC,UAAU;QAC5C,wBAAwB;IAC1B;IAEA,MAAM,yBAAyB,OAAO;QACpC,IAAI;YACF,MAAM,QAAQ,MAAM;YACpB,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;YAE5B,MAAM,WAAW,MAAM,MAAM,qBAAqB;gBAChD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,iBAAiB,CAAC,OAAO,EAAE,OAAO;gBACpC;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,OAAO,MAAM,SAAS,IAAI;QAC5B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,MAAM;QACR;IACF;IAEA,MAAM,wBAAwB;QAC5B,IAAI,CAAC,sBAAsB;QAE3B,IAAI;YACF,cAAc;YAEd,MAAM,WAAW;YACjB,IAAI,CAAC,UAAU;gBACb,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,kBAAkB;gBACtB,cAAc,SAAS,IAAI;gBAC3B,WAAW,SAAS,SAAS;gBAC7B,SAAS;gBACT,YAAY,qBAAqB,aAAa;gBAC9C,SAAS;oBACP,YAAY,qBAAqB,UAAU;oBAC3C,iBAAiB,qBAAqB,eAAe;oBACrD,kBAAkB,qBAAqB,gBAAgB;oBACvD,QAAQ,qBAAqB,MAAM;oBACnC,kBAAkB,qBAAqB,gBAAgB;oBACvD,aAAa,qBAAqB,WAAW;gBAC/C;YACF;YAEA,MAAM,uBAAuB;YAC7B,cAAc;YAEd,+BAA+B;YAC/B,WAAW,IAAM,cAAc,SAAS;QAC1C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,cAAc;YACd,WAAW,IAAM,cAAc,SAAS;QAC1C;IACF;IAEA,MAAM,0BAA0B,CAAC;QAC/B,IAAI,OAAO,OAAO,EAAE;YAClB,aAAa;mBAAI;aAAU;QAC7B;QAEA,sBAAsB;QACtB,IAAI,OAAO,MAAM,CAAC,MAAM,GAAG,GAAG;YAC5B,MAAM,CAAC,MAAM,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO;QAC3C,OAAO,IAAI,OAAO,QAAQ,CAAC,MAAM,GAAG,GAAG;YACrC,MAAM,CAAC,WAAW,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO;QAClD,OAAO;YACL,MAAM,CAAC,kBAAkB,EAAE,OAAO,aAAa,CAAC,WAAW,CAAC;QAC9D;IACF;IAEA,qBACE,8OAAC,4JAAgB;;0BACf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAuC;;;;;;kCACrD,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;wCAAK,WAAU;kDAA4F;;;;;;kDAC5G,8OAAC;kDAAK;;;;;;;;;;;;0CAER,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;wCAAK,WAAU;kDAA4F;;;;;;kDAC5G,8OAAC;;4CAAK;0DACJ,8OAAC;gDAAG,WAAU;;kEACZ,8OAAC;kEAAG;;;;;;kEACJ,8OAAC;kEAAG;;;;;;;;;;;;;;;;;;;;;;;;0CAIV,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;wCAAK,WAAU;kDAA4F;;;;;;kDAC5G,8OAAC;kDAAK;;;;;;;;;;;;0CAER,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;wCAAK,WAAU;kDAA4F;;;;;;kDAC5G,8OAAC;kDAAK;;;;;;;;;;;;;;;;;;kCAGV,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA4B;;;;;;0CACzC,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAG;;;;;;;;;;;;;;;;;;;;;;;;0BAMV,8OAAC;gBAAI,WAAU;;oBACZ,UAAU,MAAM,KAAK,kBACpB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS,IAAM,oBAAoB;gCACnC,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;6CAGpC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDACC,OAAO,qBAAqB;gDAC5B,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gDAC9C,WAAU;0DAET,UAAU,GAAG,CAAC,CAAA,yBACb,8OAAC;wDAAyB,OAAO,SAAS,EAAE;kEACzC,SAAS,IAAI;uDADH,SAAS,EAAE;;;;;;;;;;0DAK5B,8OAAC;gDACC,SAAS,IAAM,oBAAoB;gDACnC,WAAU;0DACX;;;;;;;;;;;;kDAIH,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAM,WAAU;0DAAoC;;;;;;0DACrD,8OAAC;gDACC,OAAO;gDACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gDAC7C,WAAU;;kEAEV,8OAAC;wDAAO,OAAM;kEAAa;;;;;;kEAC3B,8OAAC;wDAAO,OAAM;kEAAQ;;;;;;;;;;;;;;;;;;;;;;;;0CAI5B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAChE,8OAAC;gDACC,MAAK;gDACL,WAAU;gDACV,aAAY;gDACZ,OAAO,sBAAsB,WAAW,SAAS;gDACjD,UAAU,CAAC;oDACT,MAAM,WAAW;oDACjB,IAAI,YAAY,SAAS,SAAS,EAAE;wDAClC,SAAS,SAAS,CAAC,KAAK,GAAG,EAAE,MAAM,CAAC,KAAK;wDACzC,aAAa;+DAAI;yDAAU;oDAC7B;gDACF;;;;;;;;;;;;kDAGJ,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAChE,8OAAC;gDACC,MAAK;gDACL,WAAU;gDACV,aAAY;gDACZ,OAAO,sBAAsB,WAAW,SAAS;gDACjD,UAAU,CAAC;oDACT,MAAM,WAAW;oDACjB,IAAI,YAAY,SAAS,SAAS,EAAE;wDAClC,SAAS,SAAS,CAAC,KAAK,GAAG,EAAE,MAAM,CAAC,KAAK;wDACzC,aAAa;+DAAI;yDAAU;oDAC7B;gDACF;;;;;;;;;;;;;;;;;;;;;;;;oBAQT,kCACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAyB;;;;;;8CACvC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAChE,8OAAC;oDACC,MAAK;oDACL,WAAU;oDACV,aAAY;oDACZ,OAAO;oDACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sDAGtD,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC;4DAAM,WAAU;sEAA+C;;;;;;sEAChE,8OAAC;4DACC,MAAK;4DACL,WAAU;4DACV,aAAY;4DACZ,OAAO;4DACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;8DAGhD,8OAAC;;sEACC,8OAAC;4DAAM,WAAU;sEAA+C;;;;;;sEAChE,8OAAC;4DACC,MAAK;4DACL,WAAU;4DACV,aAAY;4DACZ,OAAO;4DACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;sDAIlD,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,SAAS,IAAM,oBAAoB;oDACnC,WAAU;8DACX;;;;;;8DAGD,8OAAC;oDACC,SAAS;oDACT,WAAU;8DACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUb,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;8DAAkC;;;;;;8DAChD,8OAAC;oDAAE,WAAU;8DAA6B;;;;;;;;;;;;sDAE5C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAM,WAAU;;sEACf,8OAAC;4DACC,MAAK;4DACL,QAAO;4DACP,UAAU;4DACV,WAAU;;;;;;sEAEZ,8OAAC;4DAAI,WAAU;4DAAU,MAAK;4DAAO,QAAO;4DAAe,SAAQ;sEACjE,cAAA,8OAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAY;gEAAI,GAAE;;;;;;;;;;;wDACjE;;;;;;;8DAGR,8OAAC;oDACC,WAAU;oDACV,SAAS;;sEAET,8OAAC;4DAAI,WAAU;4DAAU,MAAK;4DAAO,QAAO;4DAAe,SAAQ;sEACjE,cAAA,8OAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAY;gEAAI,GAAE;;;;;;;;;;;wDACjE;;;;;;;;;;;;;;;;;;;8CAKZ,8OAAC;oCAAI,WAAU;8CACZ,qCACC,8OAAC;wCAAI,WAAU;kDACZ,qBAAsB,UAAU,CAAC,GAAG,CAAC,CAAC,WAAW,sBAChD,8OAAC;gDAAgB,WAAU;;kEACzB,8OAAC;wDAAI,WAAU;kEACb,cAAA,8OAAC;;8EACC,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAG,WAAU;sFAA+B,UAAU,IAAI;;;;;;sFAC3D,8OAAC;4EAAM,WAAU;;8FACf,8OAAC;oFACC,MAAK;oFACL,WAAU;oFACV,SAAS,UAAU,QAAQ;oFAC3B,UAAU,CAAC;wFACT,MAAM,WAAW;wFACjB,IAAI,UAAU;4FACZ,SAAS,UAAU,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,MAAM,CAAC,OAAO;4FACtD,aAAa;mGAAI;6FAAU;wFAC7B;oFACF;;;;;;8FAEF,8OAAC;oFAAI,WAAU;;;;;;;;;;;;;;;;;;8EAGnB,8OAAC;oEAAE,WAAU;;wEAAwB;wEACvB,UAAU,OAAO;wEAAC;wEAAa,UAAU,UAAU;wEAAC;;;;;;;gEAEjE,UAAU,SAAS,KAAK,wBACvB,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAI,WAAU;;8FACb,8OAAC;oFAAK,WAAW,CAAC,sDAAsD,EACtE,UAAU,SAAS,KAAK,YAAY,gCACpC,6BACA;;wFACC,UAAU,SAAS,KAAK,YAAY,YAAY;wFAAiB;wFACjE,UAAU,WAAW;wFAAC;wFACtB,UAAU,aAAa,GAAG,QAAQ;wFAClC,UAAU,eAAe,GAAG,qBAAqB;;;;;;;gFAEnD,mBAAmB,yBAClB,8OAAC;oFAAM,WAAU;;sGACf,8OAAC;4FACC,MAAK;4FACL,WAAU;4FACV,SAAS,UAAU,UAAU,IAAI;4FACjC,UAAU,CAAC;gGACT,MAAM,WAAW;gGACjB,IAAI,UAAU;oGACZ,SAAS,UAAU,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,MAAM,CAAC,OAAO;oGACxD,aAAa;2GAAI;qGAAU;gGAC7B;4FACF;;;;;;sGAEF,8OAAC;4FAAK,WAAU;sGAAwB;;;;;;;;;;;;;;;;;;sFAI9C,8OAAC;4EAAE,WAAU;;gFAA6B;gFAChC,UAAU,mBAAmB;gFAAC;gFAAuC,UAAU,YAAY;gFAClG,UAAU,eAAe,GAAG,kEAAkE;;;;;;;wEAIhG,mBAAmB,yBAClB,8OAAC;4EAAI,WAAU;;gFACZ,UAAU,SAAS,KAAK,iCACvB,8OAAC;oFAAI,WAAU;;sGACb,8OAAC;4FAAM,WAAU;sGAAwB;;;;;;sGACzC,8OAAC;4FACC,MAAK;4FACL,WAAU;4FACV,OAAO,UAAU,WAAW,IAAI;4FAChC,aAAY;4FACZ,UAAU,CAAC,UAAU,UAAU;4FAC/B,UAAU,CAAC;gGACT,MAAM,WAAW;gGACjB,IAAI,UAAU;oGACZ,SAAS,UAAU,CAAC,MAAM,CAAC,WAAW,GAAG,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;oGACvE,aAAa;2GAAI;qGAAU;gGAC7B;4FACF;;;;;;;;;;;;gFAKL,UAAU,SAAS,KAAK,2BACvB,8OAAC;oFAAI,WAAU;;wFACZ,UAAU,eAAe,kBACxB,8OAAC;4FAAI,WAAU;;8GACb,8OAAC;oGAAI,WAAU;;sHACb,8OAAC;4GAAM,WAAU;sHAAwB;;;;;;sHACzC,8OAAC;4GAAI,WAAU;;8HACb,8OAAC;oHAAM,WAAU;;sIACf,8OAAC;4HACC,MAAK;4HACL,MAAM,GAAG,UAAU,IAAI,CAAC,YAAY,CAAC;4HACrC,OAAM;4HACN,WAAU;4HACV,SAAS,UAAU,QAAQ,KAAK;4HAChC,UAAU;gIACR,MAAM,WAAW;gIACjB,IAAI,UAAU;oIACZ,SAAS,UAAU,CAAC,MAAM,CAAC,QAAQ,GAAG;oIACtC,aAAa;2IAAI;qIAAU;gIAC7B;4HACF;;;;;;sIAEF,8OAAC;4HAAK,WAAU;sIAAuB;;;;;;;;;;;;8HAEzC,8OAAC;oHAAM,WAAU;;sIACf,8OAAC;4HACC,MAAK;4HACL,MAAM,GAAG,UAAU,IAAI,CAAC,YAAY,CAAC;4HACrC,OAAM;4HACN,WAAU;4HACV,SAAS,UAAU,QAAQ,KAAK;4HAChC,UAAU;gIACR,MAAM,WAAW;gIACjB,IAAI,UAAU;oIACZ,SAAS,UAAU,CAAC,MAAM,CAAC,QAAQ,GAAG;oIACtC,aAAa;2IAAI;qIAAU;gIAC7B;4HACF;;;;;;sIAEF,8OAAC;4HAAK,WAAU;sIAAyB;;;;;;;;;;;;;;;;;;;;;;;;8GAI/C,8OAAC;oGAAI,WAAU;;sHACb,8OAAC;sHAAO;;;;;;sHACR,8OAAC;4GAAK,WAAU;sHACb,UAAU,QAAQ,KAAK,qBACtB,8OAAC;gHAAK,WAAU;0HAA6B;;;;;uHAC7C,UAAU,QAAQ,KAAK,sBACrB,8OAAC;gHAAK,WAAU;0HAA2B;;;;;qIAC3C,8OAAC;gHAAK,WAAU;0HAAgB;;;;;;;;;;;;;;;;;;;;;;;sGAM5C,8OAAC;4FAAI,WAAU;;8GACb,8OAAC;oGAAM,WAAU;8GAAwB;;;;;;8GACzC,8OAAC;oGACC,MAAK;oGACL,WAAU;oGACV,OAAO,UAAU,UAAU,IAAI;oGAC/B,aAAY;oGACZ,UAAU,CAAC;wGACT,MAAM,WAAW;wGACjB,IAAI,UAAU;4GACZ,SAAS,UAAU,CAAC,MAAM,CAAC,UAAU,GAAG,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;4GACtE,aAAa;mHAAI;6GAAU;wGAC7B;oGACF;;;;;;8GAEF,8OAAC;oGAAI,WAAU;8GACZ,UAAU,UAAU,GAAG,CAAC,UAAU,EAAE,UAAU,WAAW,CAAC,KAAK,CAAC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kEAWxF,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;;kFACC,8OAAC;wEAAM,WAAU;kFAA+C;;;;;;kFAChE,8OAAC;wEACC,MAAK;wEACL,MAAK;wEACL,KAAK,UAAU,OAAO;wEACtB,WAAU;wEACV,aAAY;wEACZ,OAAO,UAAU,IAAI,EAAE,SAAS;wEAChC,UAAU,CAAC;4EACT,MAAM,WAAW;4EACjB,IAAI,UAAU;gFACZ,IAAI,CAAC,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE;oFACpC,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG;wFAAE,OAAO;wFAAG,MAAM;wFAAG,OAAO;oFAAE;gFAClE;gFACA,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,GAAG,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;gFACvE,aAAa;uFAAI;iFAAU;4EAC7B;wEACF;;;;;;kFAEF,8OAAC;wEAAI,WAAU;;4EAAmC;4EAC1C,UAAU,OAAO;;;;;;;;;;;;;0EAG3B,8OAAC;;kFACC,8OAAC;wEAAM,WAAU;kFAA+C;;;;;;kFAChE,8OAAC;wEACC,MAAK;wEACL,MAAK;wEACL,KAAK,UAAU,OAAO;wEACtB,WAAU;wEACV,aAAY;wEACZ,OAAO,UAAU,IAAI,EAAE,QAAQ;wEAC/B,UAAU,CAAC;4EACT,MAAM,WAAW;4EACjB,IAAI,UAAU;gFACZ,IAAI,CAAC,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE;oFACpC,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG;wFAAE,OAAO;wFAAG,MAAM;wFAAG,OAAO;oFAAE;gFAClE;gFACA,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,GAAG,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;gFACtE,aAAa;uFAAI;iFAAU;4EAC7B;wEACF;;;;;;kFAEF,8OAAC;wEAAI,WAAU;;4EAAmC;4EAC1C,UAAU,OAAO;;;;;;;;;;;;;0EAG3B,8OAAC;;kFACC,8OAAC;wEAAM,WAAU;kFAA+C;;;;;;kFAChE,8OAAC;wEACC,MAAK;wEACL,MAAK;wEACL,KAAK,UAAU,OAAO;wEACtB,WAAU;wEACV,aAAY;wEACZ,OAAO,UAAU,IAAI,EAAE,SAAS;wEAChC,UAAU,CAAC;4EACT,MAAM,WAAW;4EACjB,IAAI,UAAU;gFACZ,IAAI,CAAC,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE;oFACpC,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG;wFAAE,OAAO;wFAAG,MAAM;wFAAG,OAAO;oFAAE;gFAClE;gFACA,SAAS,UAAU,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,GAAG,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;gFACvE,aAAa;uFAAI;iFAAU;4EAC7B;wEACF;;;;;;kFAEF,8OAAC;wEAAI,WAAU;;4EAAmC;4EAC1C,UAAU,OAAO;;;;;;;;;;;;;;;;;;;;+CA3OrB;;;;;;;;;6DAmPd,8OAAC;wCAAI,WAAU;kDAAiC;;;;;;;;;;;8CAKpD,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCACC,WAAU;wCACV,SAAS;;0DAET,8OAAC;gDAAI,WAAU;gDAAU,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACjE,cAAA,8OAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAY;oDAAI,GAAE;;;;;;;;;;;4CACjE;;;;;;;;;;;;;;;;;;;;;;;kCAQd,8OAAC;wBAAI,WAAU;kCACZ,qCACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;8DAAkC;;;;;;8DAChD,8OAAC;oDAAE,WAAU;8DAA6B;;;;;;;;;;;;sDAE5C,8OAAC;4CACC,SAAS;4CACT,UAAU,eAAe;4CACzB,WAAW,CAAC,cAAc,EACxB,eAAe,UAAU,gCACzB,eAAe,UAAU,4BACzB,eAAe,WAAW,eAAe,IACzC;sDAED,eAAe,WAAW,cAC1B,eAAe,UAAU,WACzB,eAAe,UAAU,UACzB;;;;;;;;;;;;8CAIL,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC;4DAAI,WAAW,CAAC,2BAA2B,EAC1C,qBAAqB,WAAW,GAAG,mBAAmB,gBACtD;sEACC,qBAAqB,WAAW,GAAG,0BAA0B;;;;;;sEAEhE,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,8OAAC;4EAAK,WAAU;;gFAAe,qBAAqB,UAAU,CAAC,cAAc,CAAC;gFAAS;;;;;;;;;;;;;8EAEzF,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,8OAAC;4EAAK,WAAU;;gFAAe,qBAAqB,eAAe,CAAC,cAAc,CAAC;gFAAS;;;;;;;;;;;;;;;;;;;;;;;;;8DAIlG,8OAAC;;sEACC,8OAAC;4DAAI,WAAU;sEAAmC;;;;;;sEAClD,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,8OAAC;4EAAK,WAAU;;gFAAe,qBAAqB,gBAAgB,CAAC,KAAK,CAAC,cAAc,CAAC;gFAAS;;;;;;;;;;;;;8EAErG,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,8OAAC;4EAAK,WAAU;;gFAAe,qBAAqB,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC;gFAAS;;;;;;;;;;;;;8EAEpG,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAK,WAAU;sFAAgB;;;;;;sFAChC,8OAAC;4EAAK,WAAU;;gFAAe,qBAAqB,gBAAgB,CAAC,KAAK,CAAC,cAAc,CAAC;gFAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDAK3G,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAK,WAAU;kEAA4B;;;;;;kEAC5C,8OAAC;wDAAK,WAAW,CAAC,kBAAkB,EAClC,qBAAqB,WAAW,GAAG,mBAAmB,gBACtD;;4DACC,qBAAqB,MAAM,CAAC,cAAc,CAAC;4DAAS;4DAAO,qBAAqB,gBAAgB,CAAC,OAAO,CAAC;4DAAG;;;;;;;;;;;;;;;;;;;;;;;;8CAOrH,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAM,WAAU;;0DACf,8OAAC;0DACC,cAAA,8OAAC;oDAAG,WAAU;;sEACZ,8OAAC;4DAAG,WAAU;sEAA0D;;;;;;sEACxE,8OAAC;4DAAG,WAAU;sEACX,sBAAsB,WAAW,SAAS;;;;;;sEAE7C,8OAAC;4DAAG,WAAU;sEAA0D;;;;;;sEACxE,8OAAC;4DAAG,WAAU;sEACX,sBAAsB,WAAW,SAAS;;;;;;sEAE7C,8OAAC;4DAAG,WAAU;sEAA2D;;;;;;sEACzE,8OAAC;4DAAG,WAAU;sEAA2D;;;;;;;;;;;;;;;;;0DAG7E,8OAAC;;oDACE,qBAAqB,aAAa,CAAC,GAAG,CAAC,CAAC,IAAS;wDAChD,2CAA2C;wDAC3C,MAAM,eAAe,GAAG,OAAO,KAAK,UAAU,GAAG,SAAS,GAAG,GAAG,UAAU,GACtD,GAAG,OAAO,KAAK,SAAS,GAAG,QAAQ,GAAG,GAAG,UAAU,GACnD,GAAG,SAAS,GAAG,GAAG,UAAU;wDAEhD,qBACE,8OAAC;4DAAe,WAAU;;8EACxB,8OAAC;oEAAG,WAAU;;sFACZ,8OAAC;4EAAI,WAAU;sFAA6B,GAAG,IAAI;;;;;;wEAClD,GAAG,UAAU,KAAK,GAAG,UAAU,kBAC9B,8OAAC;4EAAI,WAAU;sFAAyB;;;;;;;;;;;;8EAG5C,8OAAC;oEAAG,WAAU;8EACZ,cAAA,8OAAC;wEAAI,WAAU;;4EACZ,GAAG,SAAS,CAAC,OAAO,CAAC;4EACrB,GAAG,OAAO,KAAK,yBACd,8OAAC;gFAAK,WAAU;;oFAAiH;oFACtH,sBAAsB,WAAW,SAAS;;;;;;;;;;;;;;;;;;8EAK3D,8OAAC;oEAAG,WAAU;8EACZ,cAAA,8OAAC;wEAAI,WAAU;;4EACZ,GAAG,QAAQ,CAAC,OAAO,CAAC;4EACpB,GAAG,OAAO,KAAK,wBACd,8OAAC;gFAAK,WAAU;0FAAiH;;;;;;;;;;;;;;;;;8EAMvI,8OAAC;oEAAG,WAAU;8EACZ,cAAA,8OAAC;wEAAI,WAAU;;4EACZ,GAAG,SAAS,CAAC,OAAO,CAAC;4EACrB,GAAG,OAAO,KAAK,yBACd,8OAAC;gFAAK,WAAU;;oFAAiH;oFACtH,sBAAsB,WAAW,SAAS;;;;;;;;;;;;;;;;;;8EAK3D,8OAAC;oEAAG,WAAU;;sFACZ,8OAAC;4EAAI,WAAU;;gFAAe,GAAG,UAAU,CAAC,cAAc,CAAC;gFAAS;;;;;;;wEACnE,GAAG,UAAU,KAAK,GAAG,UAAU,kBAC9B,8OAAC;4EAAI,WAAU;;gFAA0B,GAAG,UAAU,CAAC,cAAc,CAAC;gFAAS;;;;;;;;;;;;;8EAGnF,8OAAC;oEAAG,WAAU;;sFACZ,8OAAC;4EAAI,WAAU;;gFAA8B,aAAa,cAAc,CAAC;gFAAS;;;;;;;wEACjF,GAAG,UAAU,KAAK,GAAG,UAAU,kBAC9B,8OAAC;4EAAI,WAAU;;gFAAyB;gFAC7B,CAAC,eAAe,GAAG,UAAU,EAAE,cAAc,CAAC;gFAAS;;;;;;;;;;;;;;2DA/C/D;;;;;oDAqDb;kEAGA,8OAAC;wDAAG,WAAU;;0EACZ,8OAAC;gEAAG,WAAU;0EAAY;;;;;;0EAC1B,8OAAC;gEAAG,WAAU;;oEAAwB,qBAAqB,gBAAgB,CAAC,KAAK,CAAC,cAAc,CAAC;oEAAS;;;;;;;0EAC1G,8OAAC;gEAAG,WAAU;;oEAAwB,qBAAqB,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC;oEAAS;;;;;;;0EACzG,8OAAC;gEAAG,WAAU;;oEAAwB,qBAAqB,gBAAgB,CAAC,KAAK,CAAC,cAAc,CAAC;oEAAS;;;;;;;0EAC1G,8OAAC;gEAAG,WAAU;;kFACZ,8OAAC;;4EAAK,qBAAqB,UAAU,CAAC,cAAc,CAAC;4EAAS;;;;;;;kFAC9D,8OAAC;wEAAI,WAAU;;4EAAyB,qBAAqB,eAAe,CAAC,cAAc,CAAC;4EAAS;;;;;;;;;;;;;0EAEvG,8OAAC;gEAAG,WAAU;;kFACZ,8OAAC;wEAAI,WAAU;;4EAAiB;4EACxB,KAAK,GAAG,CACZ,qBAAqB,gBAAgB,CAAC,KAAK,EAC3C,qBAAqB,gBAAgB,CAAC,IAAI,EAC1C,qBAAqB,gBAAgB,CAAC,KAAK,EAC3C,cAAc,CAAC;4EAAS;;;;;;;kFAE5B,8OAAC;wEAAI,WAAU;;4EAAyB;4EAChC,KAAK,GAAG,CACZ,qBAAqB,gBAAgB,CAAC,KAAK,EAC3C,qBAAqB,gBAAgB,CAAC,IAAI,EAC1C,qBAAqB,gBAAgB,CAAC,KAAK,EAC3C,cAAc,CAAC;4EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDASxC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;oCAAuC,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CAC9F,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAY;wCAAI,GAAE;;;;;;;;;;;8CAEvE,8OAAC;oCAAG,WAAU;8CAA2C;;;;;;8CACzD,8OAAC;oCAAE,WAAU;8CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3C","debugId":null}}]
}