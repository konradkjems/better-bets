{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/konradkjems/Desktop/Cursor-Projects/better-bets/src/lib/mongodb.ts"],"sourcesContent":["import { MongoClient, Db } from 'mongodb';\n\nlet cachedClient: MongoClient | null = null;\nlet cachedDb: Db | null = null;\n\nexport async function connectToDatabase(): Promise<{ client: MongoClient; db: Db }> {\n  if (cachedClient && cachedDb) {\n    return { client: cachedClient, db: cachedDb };\n  }\n\n  const uri = process.env.MONGO_URI;\n  if (!uri) {\n    throw new Error('Please define the MONGO_URI environment variable inside .env.local');\n  }\n\n  const client = new MongoClient(uri);\n  await client.connect();\n  \n  const db = client.db('better-bets');\n  \n  cachedClient = client;\n  cachedDb = db;\n\n  return { client, db };\n}\n\n// Calculation schema interface\nexport interface Calculation {\n  _id?: string;\n  userId: string; // Clerk user ID\n  customerName: string;\n  teamNames: {\n    team1: string;\n    team2: string;\n  };\n  betType: 'qualifying' | 'bonus';\n  bookmakers: Array<{\n    name: string;\n    odds: {\n      team1: number;\n      draw: number;\n      team2: number;\n    };\n    fixedStake: number;\n    actualCost: number;\n    minOdds: number;\n    preferLoss?: boolean;\n    avoidWin?: boolean;\n    isActive: boolean;\n    betType: 'team1' | 'draw' | 'team2';\n    bonusType?: 'freebet' | 'matchingBonus' | 'none';\n    bonusAmount?: number;\n    bonusMinOdds?: number;\n    qualifyingBetAmount?: number;\n    isBonusLocked?: boolean;\n    usedInBet1?: boolean;\n    bonusOnlyIfLost?: boolean;\n    bet1Lost?: boolean;\n    bet1Balance?: number;\n    bet1Profit?: number;\n  }>;\n  results: {\n    totalStake: number;\n    totalActualCost: number;\n    potentialReturns: {\n      team1: number;\n      draw: number;\n      team2: number;\n    };\n    profit: number;\n    profitPercentage: number;\n    isArbitrage: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEA,IAAI,eAAmC;AACvC,IAAI,WAAsB;AAEnB,eAAe;IACpB,IAAI,gBAAgB,UAAU;QAC5B,OAAO;YAAE,QAAQ;YAAc,IAAI;QAAS;IAC9C;IAEA,MAAM;IACN;;IAIA,MAAM,SAAS,IAAI,sHAAW,CAAC;IAC/B,MAAM,OAAO,OAAO;IAEpB,MAAM,KAAK,OAAO,EAAE,CAAC;IAErB,eAAe;IACf,WAAW;IAEX,OAAO;QAAE;QAAQ;IAAG;AACtB","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/konradkjems/Desktop/Cursor-Projects/better-bets/src/lib/auth.ts"],"sourcesContent":["import { auth } from '@clerk/nextjs/server';\nimport { NextRequest } from 'next/server';\n\nexport async function getUserId(): Promise<string | null> {\n  try {\n    const { userId } = await auth();\n    return userId;\n  } catch (error) {\n    console.error('Error getting user ID:', error);\n    return null;\n  }\n}\n\nexport async function requireAuth(): Promise<string> {\n  const userId = await getUserId();\n  if (!userId) {\n    throw new Error('Unauthorized');\n  }\n  return userId;\n}\n\nexport function withAuth<T extends any[]>(\n  handler: (userId: string, ...args: T) => Promise<Response>\n) {\n  return async (...args: T): Promise<Response> => {\n    try {\n      const userId = await requireAuth();\n      return handler(userId, ...args);\n    } catch (error) {\n      console.error('Auth error:', error);\n      return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n  };\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAA,6LAAI;QAC7B,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM;IACrB,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAEO,SAAS,SACd,OAA0D;IAE1D,OAAO,OAAO,GAAG;QACf,IAAI;YACF,MAAM,SAAS,MAAM;YACrB,OAAO,QAAQ,WAAW;QAC5B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,eAAe;YAC7B,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO;YAAe,IAAI;gBAC7D,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;YAChD;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/konradkjems/Desktop/Cursor-Projects/better-bets/src/app/api/calculations/list/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { connectToDatabase } from '../../../../lib/mongodb';\nimport { requireAuth } from '../../../../lib/auth';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const userId = await requireAuth();\n    const { db } = await connectToDatabase();\n    const calculationsCollection = db.collection('calculations');\n\n    const { searchParams } = new URL(request.url);\n    const page = parseInt(searchParams.get('page') || '1');\n    const limit = parseInt(searchParams.get('limit') || '10');\n    const skip = (page - 1) * limit;\n\n    const calculations = await calculationsCollection\n      .find({ userId })\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit)\n      .toArray();\n\n    const total = await calculationsCollection.countDocuments({ userId });\n\n    return NextResponse.json({\n      calculations,\n      total,\n      page,\n      limit,\n    });\n  } catch (error) {\n    console.error('Error fetching calculations:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch calculations' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,SAAS,MAAM,IAAA,mIAAW;QAChC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,IAAA,4IAAiB;QACtC,MAAM,yBAAyB,GAAG,UAAU,CAAC;QAE7C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,OAAO,SAAS,aAAa,GAAG,CAAC,WAAW;QAClD,MAAM,QAAQ,SAAS,aAAa,GAAG,CAAC,YAAY;QACpD,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI;QAE1B,MAAM,eAAe,MAAM,uBACxB,IAAI,CAAC;YAAE;QAAO,GACd,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE,GACrB,IAAI,CAAC,MACL,KAAK,CAAC,OACN,OAAO;QAEV,MAAM,QAAQ,MAAM,uBAAuB,cAAc,CAAC;YAAE;QAAO;QAEnE,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB;YACA;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA+B,GACxC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}